import { useState } from"react";
import { Card,CardContent,CardDescription,CardHeader,CardTitle } from"@/components/ui/card";
import { Button } from"@/components/ui/button";
import { Badge } from"@/components/ui/badge";
import { Input } from"@/components/ui/input";
import { Table,TableBody,TableCell,TableHead,TableHeader,TableRow } from"@/components/ui/table";
import { Skeleton } from"@/components/ui/skeleton";
import { 
Car,
Users,
Package,
CheckCircle,
Clock,
AlertTriangle,
Search,
Plus,
ArrowUpRight,
TrendingUp,
Activity,
FileText,
ClipboardList,
HandHeart
 } from"lucide-react";

interfaceKPICardProps{
title:string;
value:string|number;
change:string;
trend:"up"|"down"|"neutral";
icon:React.ElementType;
isLoading:boolean;
}

const KPICard=({title,value,change,trend,icon:Icon,isLoading}:KPICardProps)=>{
if(isLoading){
return(
<CardclassName="hover:shadow-eleganttransition-allduration-200">
<CardContentclassName="p-6">
<divclassName="flexitems-centerjustify-between">
<divclassName="space-y-2flex-1">
<SkeletonclassName="h-4w-24"/>
<SkeletonclassName="h-8w-16"/>
<SkeletonclassName="h-3w-20"/>
</div>
<SkeletonclassName="h-12w-12rounded-lg"/>
</div>
</CardContent>
</Card>
);
}

return(
<CardclassName="hover:shadow-eleganttransition-allduration-200border-l-4border-l-primary">
<CardContentclassName="p-6">
<divclassName="flexitems-centerjustify-between">
<div>
<pclassName="text-smfont-mediumtext-muted-foreground">{title}</p>
<divclassName="flexitems-centerspace-x-2mt-2">
<h3className="text-3xlfont-boldtext-foreground">{value}</h3>
{change&&(
<spanclassName={`text-smflexitems-centerfont-medium${
trend==='up''text-success':trend==='down''text-destructive':'text-muted-foreground'
}`}>
<TrendingUpclassName="h-3w-3mr-1"/>
{change}
</span>
)}
</div>
</div>
<divclassName="p-4rounded-lgbg-primary/10">
<IconclassName="h-8w-8text-primary"/>
</div>
</div>
</CardContent>
</Card>
);
};

const StatusBadge=({status}:{status:string})=>{
const statusConfig={
"pending":{variant:"secondary",text:"Pending",className:""},
"in-repair":{variant:"default",text:"InRepair",className:""},
"awaiting-parts":{variant:"outline",text:"AwaitingParts",className:"border-warningtext-warning"},
"awaiting-handover":{variant:"outline",text:"AwaitingHandover",className:"border-infotext-infobg-info/5"},
"manufacturer-review":{variant:"outline",text:"ManufacturerReview",className:"border-warningtext-warningbg-warning/5"},
"approved":{variant:"outline",text:"Approved",className:"border-successtext-successbg-success/5"},
"completed":{variant:"outline",text:"Completed",className:"border-successtext-successbg-success/10"}
};

const config=statusConfig[statusaskeyoftypeofstatusConfig];
returnconfig(
<Badgevariant={config.variant}className={config.className}>
{config.text}
</Badge>
):(
<Badgevariant="secondary">{status}</Badge>
);
};

const EmptyState=()=>(
<divclassName="flexflex-colitems-centerjustify-centerpy-12text-center">
<ClipboardListclassName="h-16w-16text-muted-foreground/50mb-4"/>
<h3className="text-lgfont-mediumtext-foregroundmb-2">Noactivecases</h3>
<pclassName="text-smtext-muted-foregroundmb-6">Getstartedbycreatingyourfirstwarrantycase</p>
<Button>
<PlusclassName="mr-2h-4w-4"/>
CreateNewCase
</Button>
</div>
);

const SCStaffDashboardPro=()=>{
const[searchQuery,setSearchQuery]=useState("");
const[isLoading,setIsLoading]=useState(false);

//Mockdataforactivecases
const activeCases=[
{
id:"WC-25-09-001",
customer:"NguyễnVănAn",
vin:"VF8ABC123456789",
status:"manufacturer-review",
assignedTech:"TrầnMinhBảo",
dateCreated:"2025-01-15",
model:"VF8Plus"
},
{
id:"WC-25-09-002",
customer:"LêThịCẩm",
vin:"VF9DEF987654321",
status:"awaiting-parts",
assignedTech:"PhạmVănĐức",
dateCreated:"2025-01-14",
model:"VF9Eco"
},
{
id:"WC-25-09-003",
customer:"HoàngMinhElip",
vin:"VF8GHI456789123",
status:"awaiting-handover",
assignedTech:"NguyễnThịPhương",
dateCreated:"2025-01-13",
model:"VF8Plus"
},
{
id:"WC-25-09-004",
customer:"TrầnQuốcHuy",
vin:"VF9JKL789012345",
status:"in-repair",
assignedTech:"LêVănGiang",
dateCreated:"2025-01-12",
model:"VF9Premium"
}
];

const filteredCases=activeCases.filter(case_=>
case_.customer.toLowerCase().includes(searchQuery.toLowerCase())||
case_.vin.toLowerCase().includes(searchQuery.toLowerCase())||
case_.id.toLowerCase().includes(searchQuery.toLowerCase())
);

return(
<divclassName="space-y-8p-6">
{/*Header*/}
<divclassName="flexitems-centerjustify-between">
<div>
<h1className="text-4xlfont-boldtext-foreground">ServiceCenterDashboard</h1>
<pclassName="text-muted-foregroundtext-lgmt-1">Monitorwarrantycasesandserviceoperations</p>
</div>
<divclassName="flexitems-centerspace-x-3">
<Buttonvariant="outline"size="lg">
<FileTextclassName="mr-2h-4w-4"/>
GenerateReport
</Button>
<Buttonsize="lg"className="bg-primaryhover:bg-primary/90">
<PlusclassName="mr-2h-4w-4"/>
CreateNewCase
</Button>
</div>
</div>

{/*KPICards*/}
<divclassName="gridgap-6md:grid-cols-2lg:grid-cols-4">
<KPICard
title="OpenCases"
value={24}
change="+3today"
trend="up"
icon={Car}
isLoading={isLoading}
/>
<KPICard
title="PendingManufacturerApproval"
value={8}
change="+2thisweek"
trend="up"
icon={Clock}
isLoading={isLoading}
/>
<KPICard
title="AwaitingParts"
value={6}
change="-1today"
trend="down"
icon={Package}
isLoading={isLoading}
/>
<KPICard
title="AwaitingCustomerHandover"
value={3}
change="+1today"
trend="up"
icon={HandHeart}
isLoading={isLoading}
/>
</div>

<divclassName="gridgap-8lg:grid-cols-3">
{/*MainContent-ActiveCases*/}
<divclassName="lg:col-span-2">
<Card>
<CardHeaderclassName="pb-4">
<divclassName="flexitems-centerjustify-between">
<div>
<CardTitleclassName="text-2xlfont-bold">ActiveCases</CardTitle>
<CardDescriptionclassName="text-base">
Casescurrentlybeingprocessedinyourservicecenter
</CardDescription>
</div>
<Buttonvariant="ghost"size="sm"className="text-primary">
ViewAllCases
<ArrowUpRightclassName="ml-1h-4w-4"/>
</Button>
</div>
</CardHeader>
<CardContent>
<divclassName="space-y-6">
<divclassName="flexitems-centerspace-x-4">
<divclassName="relativeflex-1max-w-md">
<SearchclassName="absoluteleft-3top-3h-4w-4text-muted-foreground"/>
<Input
placeholder="SearchbyCaseID,VIN,orcustomer..."
value={searchQuery}
onChange={(e)=>setSearchQuery(e.target.value)}
className="pl-10h-12"
/>
</div>
</div>

{filteredCases.length===0(
<EmptyState/>
):(
<divclassName="borderrounded-lg">
<Table>
<TableHeader>
<TableRowclassName="bg-muted/30">
<TableHeadclassName="font-semibold">CaseID</TableHead>
<TableHeadclassName="font-semibold">Customer</TableHead>
<TableHeadclassName="font-semibold">Vehicle</TableHead>
<TableHeadclassName="font-semibold">Status</TableHead>
<TableHeadclassName="font-semibold">AssignedTech</TableHead>
<TableHeadclassName="font-semibold">DateCreated</TableHead>
<TableHeadclassName="font-semibold">Actions</TableHead>
</TableRow>
</TableHeader>
<TableBody>
{filteredCases.map((case_)=>(
<TableRow
key={case_.id}
className="hover:bg-muted/50cursor-pointertransition-colors"
>
<TableCellclassName="font-monofont-mediumtext-primary">
{case_.id}
</TableCell>
<TableCellclassName="font-medium">{case_.customer}</TableCell>
<TableCell>
<div>
<divclassName="font-mediumtext-sm">{case_.model}</div>
<divclassName="font-monotext-xstext-muted-foreground">
{case_.vin}
</div>
</div>
</TableCell>
<TableCell>
<StatusBadgestatus={case_.status}/>
</TableCell>
<TableCellclassName="text-sm">{case_.assignedTech}</TableCell>
<TableCellclassName="text-smtext-muted-foreground">
{case_.dateCreated}
</TableCell>
<TableCell>
<Buttonvariant="ghost"size="sm"className="text-primaryhover:text-primary/80">
ViewDetails
</Button>
</TableCell>
</TableRow>
))}
</TableBody>
</Table>
</div>
)}
</div>
</CardContent>
</Card>
</div>

{/*Sidebar*/}
<divclassName="space-y-6">
{/*QuickActions*/}
<Card>
<CardHeader>
<CardTitleclassName="text-lg">QuickActions</CardTitle>
</CardHeader>
<CardContentclassName="space-y-3">
<Buttonvariant="outline"className="w-fulljustify-starth-12text-left">
<CarclassName="mr-3h-4w-4"/>
RegisterNewVehicle
</Button>
<Buttonvariant="outline"className="w-fulljustify-starth-12text-left">
<FileTextclassName="mr-3h-4w-4"/>
CreateWarrantyCase
</Button>
<Buttonvariant="outline"className="w-fulljustify-starth-12text-left">
<UsersclassName="mr-3h-4w-4"/>
AssignTechnician
</Button>
<Buttonvariant="outline"className="w-fulljustify-starth-12text-left">
<PackageclassName="mr-3h-4w-4"/>
TrackPartShipment
</Button>
</CardContent>
</Card>

{/*RecentActivity*/}
<Card>
<CardHeader>
<CardTitleclassName="text-lgflexitems-centerspace-x-2">
<ActivityclassName="h-4w-4"/>
<span>RecentActivity</span>
</CardTitle>
</CardHeader>
<CardContent>
<divclassName="space-y-4">
<divclassName="flexitems-startspace-x-3">
<divclassName="w-2h-2bg-successrounded-fullmt-2flex-shrink-0"></div>
<divclassName="flex-1min-w-0">
<pclassName="text-smtext-foreground">CaseWC-25-09-001approvedbymanufacturer</p>
<pclassName="text-xstext-muted-foreground">2hoursago</p>
</div>
</div>
<divclassName="flexitems-startspace-x-3">
<divclassName="w-2h-2bg-warningrounded-fullmt-2flex-shrink-0"></div>
<divclassName="flex-1min-w-0">
<pclassName="text-smtext-foreground">PartsshipmentPS-2025-001intransit</p>
<pclassName="text-xstext-muted-foreground">4hoursago</p>
</div>
</div>
<divclassName="flexitems-startspace-x-3">
<divclassName="w-2h-2bg-primaryrounded-fullmt-2flex-shrink-0"></div>
<divclassName="flex-1min-w-0">
<pclassName="text-smtext-foreground">NewtechnicianassignedtoCaseWC-25-09-003</p>
<pclassName="text-xstext-muted-foreground">6hoursago</p>
</div>
</div>
</div>
</CardContent>
</Card>
</div>
</div>
</div>
);
};

exportdefaultSCStaffDashboardPro;