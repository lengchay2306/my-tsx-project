import { useState } from"react";
import { Card,CardContent,CardDescription,CardHeader,CardTitle } from"@/components/ui/card";
import { Button } from"@/components/ui/button";
import { Badge } from"@/components/ui/badge";
import { Tabs,TabsContent,TabsList,TabsTrigger } from"@/components/ui/tabs";
import { Avatar,AvatarFallback,AvatarImage } from"@/components/ui/avatar";
import { Separator } from"@/components/ui/separator";
import { 
ArrowLeft,
User,
Car,
Wrench,
FileText,
Package,
Activity,
Phone,
Mail,
Calendar,
MapPin,
Clock,
CheckCircle2,
AlertTriangle,
Send,
UserPlus,
X
 } from"lucide-react";

const StatusBadge=({status}:{status:string})=>{
const statusConfig={
"pending":{variant:"secondary",text:"Pending",className:"bg-secondary"},
"in-repair":{variant:"default",text:"InRepair",className:"bg-primarytext-primary-foreground"},
"awaiting-parts":{variant:"outline",text:"AwaitingParts",className:"border-warningtext-warningbg-warning/5"},
"awaiting-handover":{variant:"outline",text:"AwaitingHandover",className:"border-infotext-infobg-info/5"},
"manufacturer-review":{variant:"outline",text:"ManufacturerReview",className:"border-warningtext-warningbg-warning/5"},
"approved":{variant:"outline",text:"Approved",className:"border-successtext-successbg-success/5"},
"completed":{variant:"outline",text:"Completed",className:"border-successtext-successbg-success/10"}
};

const config=statusConfig[statusaskeyoftypeofstatusConfig];
returnconfig(
<Badgevariant={config.variant}className={`${config.className}text-smpx-3py-1`}>
{config.text}
</Badge>
):(
<Badgevariant="secondary"className="text-smpx-3py-1">{status}</Badge>
);
};

const ReportStatusBadge=({status}:{status:string})=>{
const statusConfig={
"pending":{text:"PendingReview",className:"bg-warning/10text-warningborder-warning"},
"approved":{text:"ApprovedbyEVM",className:"bg-success/10text-successborder-success"},
"rejected":{text:"Rejected",className:"bg-destructive/10text-destructiveborder-destructive"}
};

const config=statusConfig[statusaskeyoftypeofstatusConfig];
returnconfig(
<Badgevariant="outline"className={`${config.className}text-xspx-2py-1`}>
{config.text}
</Badge>
):(
<Badgevariant="secondary"className="text-xspx-2py-1">{status}</Badge>
);
};

const CaseDetailViewPro=()=>{
const[activeTab,setActiveTab]=useState("reports");

//Mockcasedata
const caseData={
id:"WC-25-09-001",
status:"manufacturer-review",
customer:{
name:"NguyễnVănAn",
phone:"+84901234567",
email:"nguyen.van.an@email.com",
avatar:"/api/placeholder/40/40"
},
vehicle:{
model:"VF8Plus",
vin:"VF8ABC123456789",
purchaseDate:"2024-03-15",
odometer:"12,450km",
color:"ArcticWhite"
},
assignedTech:{
name:"TrầnMinhBảo",
phone:"+84902345678",
expertise:"BatterySystems",
avatar:"/api/placeholder/40/40"
},
dateCreated:"2025-01-15",
complaint:"Vehicleexperiencingreducedbatteryrangeandchargingissues"
};

const diagnosticReports=[
{
id:"DR-001",
title:"BatterySystemDiagnostic",
technician:"TrầnMinhBảo",
status:"approved",
dateCreated:"2025-01-16",
diagnosis:"Batterypackshowingdegradedcellsinmodule3.Recommendreplacementofaffectedbatterymodule.",
requiredParts:["BatteryModuleBM-VF8-03","CoolingSystemGasketCSG-001"],
photos:3
},
{
id:"DR-002",
title:"ChargingSystemAnalysis",
technician:"TrầnMinhBảo",
status:"pending",
dateCreated:"2025-01-17",
diagnosis:"Onboardchargeroperatingwithinnormalparameters.Nohardwareissuesdetected.",
requiredParts:[],
photos:2
}
];

const partShipments=[
{
id:"PS-2025-001",
status:"shipped",
shippedDate:"2025-01-18",
expectedArrival:"2025-01-20",
items:["BatteryModuleBM-VF8-03","CoolingSystemGasketCSG-001"],
trackingNumber:"VT987654321"
}
];

const activityLog=[
{
id:"1",
user:"System",
action:"Casestatusupdatedto'ManufacturerReview'",
timestamp:"2025-01-1714:30",
type:"status"
},
{
id:"2",
user:"TrầnMinhBảo",
action:"Addedchargingsystemdiagnosticreport",
timestamp:"2025-01-1710:45",
type:"report"
},
{
id:"3",
user:"NguyễnThuHà",
action:"Submittedcasetomanufacturerforapproval",
timestamp:"2025-01-1616:20",
type:"submission"
},
{
id:"4",
user:"TrầnMinhBảo",
action:"Completedinitialbatterysystemdiagnostic",
timestamp:"2025-01-1611:30",
type:"progress"
}
];

return(
<divclassName="space-y-6p-6">
{/*Header*/}
<divclassName="flexitems-centerjustify-between">
<divclassName="flexitems-centerspace-x-4">
<Buttonvariant="ghost"size="sm">
<ArrowLeftclassName="h-4w-4mr-2"/>
BacktoCases
</Button>
<div>
<divclassName="flexitems-centerspace-x-3">
<h1className="text-3xlfont-boldtext-foreground">{caseData.id}</h1>
<StatusBadgestatus={caseData.status}/>
</div>
<pclassName="text-muted-foregroundmt-1">Createdon{caseData.dateCreated}</p>
</div>
</div>
</div>

<divclassName="gridgap-6lg:grid-cols-4">
{/*MainContent*/}
<divclassName="lg:col-span-3">
<Tabsvalue={activeTab}onValueChange={setActiveTab}className="space-y-6">
<TabsListclassName="gridw-fullgrid-cols-3">
<TabsTriggervalue="reports"className="flexitems-centerspace-x-2">
<FileTextclassName="h-4w-4"/>
<span>DiagnosticReports</span>
</TabsTrigger>
<TabsTriggervalue="shipments"className="flexitems-centerspace-x-2">
<PackageclassName="h-4w-4"/>
<span>PartShipments</span>
</TabsTrigger>
<TabsTriggervalue="activity"className="flexitems-centerspace-x-2">
<ActivityclassName="h-4w-4"/>
<span>ActivityLog</span>
</TabsTrigger>
</TabsList>

<TabsContentvalue="reports"className="space-y-4">
{diagnosticReports.length===0(
<Card>
<CardContentclassName="py-12text-center">
<FileTextclassName="h-16w-16text-muted-foreground/50mx-automb-4"/>
<h3className="text-lgfont-mediummb-2">Nodiagnosticreports</h3>
<pclassName="text-muted-foreground">Waitingfortechniciantoadddiagnosticreports</p>
</CardContent>
</Card>
):(
<divclassName="space-y-4">
{diagnosticReports.map((report)=>(
<Cardkey={report.id}className="hover:shadow-mdtransition-shadow">
<CardHeaderclassName="pb-4">
<divclassName="flexitems-centerjustify-between">
<divclassName="flexitems-centerspace-x-3">
<CardTitleclassName="text-lg">{report.title}</CardTitle>
<ReportStatusBadgestatus={report.status}/>
</div>
<divclassName="text-smtext-muted-foreground">
{report.dateCreated}
</div>
</div>
<CardDescriptionclassName="flexitems-centerspace-x-2">
<WrenchclassName="h-4w-4"/>
<span>By{report.technician}</span>
{report.photos>0&&(
<>
<span>•</span>
<span>{report.photos}photosattached</span>
</>
)}
</CardDescription>
</CardHeader>
<CardContent>
<divclassName="space-y-4">
<div>
<h4className="font-mediummb-2">Diagnosis</h4>
<pclassName="text-smtext-muted-foregroundbg-mutedp-3rounded-md">
{report.diagnosis}
</p>
</div>

{report.requiredParts.length>0&&(
<div>
<h4className="font-mediummb-2">RequiredParts</h4>
<divclassName="flexflex-wrapgap-2">
{report.requiredParts.map((part,index)=>(
<Badgekey={index}variant="outline"className="text-xs">
{part}
</Badge>
))}
</div>
</div>
)}
</div>
</CardContent>
</Card>
))}
</div>
)}
</TabsContent>

<TabsContentvalue="shipments"className="space-y-4">
{partShipments.length===0(
<Card>
<CardContentclassName="py-12text-center">
<PackageclassName="h-16w-16text-muted-foreground/50mx-automb-4"/>
<h3className="text-lgfont-mediummb-2">Nopartshipments</h3>
<pclassName="text-muted-foreground">Nopartshavebeenshippedforthiscaseyet</p>
</CardContent>
</Card>
):(
<divclassName="space-y-4">
{partShipments.map((shipment)=>(
<Cardkey={shipment.id}>
<CardHeader>
<divclassName="flexitems-centerjustify-between">
<CardTitleclassName="text-lg">{shipment.id}</CardTitle>
<Badgevariant="outline"className="capitalizeborder-successtext-successbg-success/5">
{shipment.status}
</Badge>
</div>
</CardHeader>
<CardContent>
<divclassName="gridgap-4md:grid-cols-2">
<div>
<divclassName="flexitems-centerspace-x-2text-smtext-muted-foregroundmb-1">
<CalendarclassName="h-4w-4"/>
<span>Shipped:{shipment.shippedDate}</span>
</div>
<divclassName="flexitems-centerspace-x-2text-smtext-muted-foreground">
<ClockclassName="h-4w-4"/>
<span>Expected:{shipment.expectedArrival}</span>
</div>
</div>
<div>
<pclassName="text-smfont-mediummb-1">Tracking:{shipment.trackingNumber}</p>
<pclassName="text-xstext-muted-foreground">{shipment.items.join(",")}</p>
</div>
</div>
</CardContent>
</Card>
))}
</div>
)}
</TabsContent>

<TabsContentvalue="activity"className="space-y-4">
<Card>
<CardHeader>
<CardTitle>CaseActivityTimeline</CardTitle>
<CardDescription>Chronologicalhistoryofallcaseactivities</CardDescription>
</CardHeader>
<CardContent>
<divclassName="space-y-4">
{activityLog.map((activity,index)=>(
<divkey={activity.id}className="flexitems-startspace-x-3">
<divclassName="flexflex-colitems-center">
<divclassName={`w-3h-3rounded-fullflex-shrink-0${
activity.type==='status''bg-primary':
activity.type==='report''bg-success':
activity.type==='submission''bg-warning':
'bg-muted-foreground'
}`}/>
{index<activityLog.length-1&&(
<divclassName="w-pxh-8bg-bordermt-2"/>
)}
</div>
<divclassName="flex-1min-w-0pb-4">
<divclassName="flexitems-centerjustify-between">
<pclassName="text-smfont-mediumtext-foreground">
{activity.action}
</p>
<pclassName="text-xstext-muted-foreground">
{activity.timestamp}
</p>
</div>
<pclassName="text-xstext-muted-foregroundmt-1">
by{activity.user}
</p>
</div>
</div>
))}
</div>
</CardContent>
</Card>
</TabsContent>
</Tabs>
</div>

{/*Sidebar*/}
<divclassName="space-y-6">
{/*CustomerInformation*/}
<Card>
<CardHeaderclassName="pb-3">
<CardTitleclassName="text-lgflexitems-centerspace-x-2">
<UserclassName="h-4w-4"/>
<span>Customer</span>
</CardTitle>
</CardHeader>
<CardContentclassName="space-y-3">
<divclassName="flexitems-centerspace-x-3">
<AvatarclassName="h-10w-10">
<AvatarImagesrc={caseData.customer.avatar}/>
<AvatarFallback>{caseData.customer.name.charAt(0)}</AvatarFallback>
</Avatar>
<divclassName="flex-1min-w-0">
<pclassName="font-mediumtext-sm">{caseData.customer.name}</p>
</div>
</div>
<divclassName="space-y-2text-sm">
<divclassName="flexitems-centerspace-x-2text-muted-foreground">
<PhoneclassName="h-3w-3"/>
<span>{caseData.customer.phone}</span>
</div>
<divclassName="flexitems-centerspace-x-2text-muted-foreground">
<MailclassName="h-3w-3"/>
<spanclassName="truncate">{caseData.customer.email}</span>
</div>
</div>
</CardContent>
</Card>

{/*VehicleInformation*/}
<Card>
<CardHeaderclassName="pb-3">
<CardTitleclassName="text-lgflexitems-centerspace-x-2">
<CarclassName="h-4w-4"/>
<span>Vehicle</span>
</CardTitle>
</CardHeader>
<CardContentclassName="space-y-3">
<div>
<pclassName="font-medium">{caseData.vehicle.model}</p>
<pclassName="text-xsfont-monotext-muted-foreground">{caseData.vehicle.vin}</p>
</div>
<divclassName="space-y-2text-smtext-muted-foreground">
<div>Purchase:{caseData.vehicle.purchaseDate}</div>
<div>Odometer:{caseData.vehicle.odometer}</div>
<div>Color:{caseData.vehicle.color}</div>
</div>
</CardContent>
</Card>

{/*AssignedTechnician*/}
<Card>
<CardHeaderclassName="pb-3">
<CardTitleclassName="text-lgflexitems-centerspace-x-2">
<WrenchclassName="h-4w-4"/>
<span>AssignedTechnician</span>
</CardTitle>
</CardHeader>
<CardContentclassName="space-y-3">
<divclassName="flexitems-centerspace-x-3">
<AvatarclassName="h-10w-10">
<AvatarImagesrc={caseData.assignedTech.avatar}/>
<AvatarFallback>{caseData.assignedTech.name.charAt(0)}</AvatarFallback>
</Avatar>
<divclassName="flex-1min-w-0">
<pclassName="font-mediumtext-sm">{caseData.assignedTech.name}</p>
<pclassName="text-xstext-muted-foreground">{caseData.assignedTech.expertise}</p>
</div>
</div>
<Buttonvariant="outline"size="sm"className="w-full">
<UserPlusclassName="h-3w-3mr-2"/>
Reassign
</Button>
</CardContent>
</Card>

{/*ActionButtons*/}
<Card>
<CardHeaderclassName="pb-3">
<CardTitleclassName="text-lg">Actions</CardTitle>
</CardHeader>
<CardContentclassName="space-y-3">
<ButtonclassName="w-full" size="sm">
<SendclassName="h-4w-4mr-2"/>
SubmittoManufacturer
</Button>
<Buttonvariant="outline"className="w-full" size="sm">
<CheckCircle2className="h-4w-4mr-2"/>
MarkasCompleted
</Button>
<Buttonvariant="destructive"className="w-full" size="sm">
<XclassName="h-4w-4mr-2"/>
CloseCase
</Button>
</CardContent>
</Card>
</div>
</div>
</div>
);
};

exportdefaultCaseDetailViewPro;